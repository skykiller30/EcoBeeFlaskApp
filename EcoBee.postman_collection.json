{
	"info": {
		"_postman_id": "1fe83c04-a0c7-4288-b774-954dfcb0ca4a",
		"name": "EcoBee",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17125143"
	},
	"item": [
		{
			"name": "GetPINandAuthCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"ecobeePin\", jsonData.ecobeePin);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"AutorizationCode\", jsonData.code);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"Interval\", jsonData.interval);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"ExpiresIn\", jsonData.expires_in);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"Scope\", jsonData.scope);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.ecobee.com/authorize?response_type=ecobeePin&client_id={{apiKey}}&scope=smartWrite\n",
					"protocol": "https",
					"host": [
						"api",
						"ecobee",
						"com"
					],
					"path": [
						"authorize"
					],
					"query": [
						{
							"key": "response_type",
							"value": "ecobeePin"
						},
						{
							"key": "client_id",
							"value": "{{apiKey}}"
						},
						{
							"key": "scope",
							"value": "smartWrite\n"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObtainAccessAndRefreshToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"accessToken\", jsonData.access_token);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"refreshToken\", jsonData.refresh_token);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.ecobee.com/token\n?grant_type=ecobeePin&code={{AutorizationCode}}&client_id={{apiKey}}",
					"protocol": "https",
					"host": [
						"api",
						"ecobee",
						"com"
					],
					"path": [
						"token\n"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "ecobeePin"
						},
						{
							"key": "code",
							"value": "{{AutorizationCode}}"
						},
						{
							"key": "client_id",
							"value": "{{apiKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "RefreshToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"accessToken\", jsonData.access_token);\r",
							"\r",
							"pm.collectionVariables.set(\"refreshToken\", jsonData.refresh_token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"console.log(response);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.ecobee.com/token?grant_type=refresh_token&code={{refreshToken}}&client_id={{apiKey}}",
					"protocol": "https",
					"host": [
						"api",
						"ecobee",
						"com"
					],
					"path": [
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "refresh_token"
						},
						{
							"key": "code",
							"value": "{{refreshToken}}"
						},
						{
							"key": "client_id",
							"value": "{{apiKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetThermostatsAndRuntime",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/thermostat?format=json&body={\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeRuntime\":true}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"thermostat"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						},
						{
							"key": "body",
							"value": "{\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeRuntime\":true}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetThermostatIDsAndProgram",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"const thermostat_List = response.thermostatList;\r",
							"\r",
							"const upstairs_Thermostat = thermostat_List.find(thermostat => thermostat.name === \"Upstairs\");\r",
							"\r",
							"const upstairs_ID = upstairs_Thermostat ? upstairs_Thermostat.identifier : null;\r",
							"\r",
							"const upstairs_Program = upstairs_Thermostat.program;\r",
							"\r",
							"const upstairs_Schedule = JSON.stringify(upstairs_Program.schedule);\r",
							"\r",
							"const upstairs_Climates = upstairs_Program.climates;\r",
							"\r",
							"const main_Floor_Thermostat = thermostat_List.find(thermostat => thermostat.name === \"Main Floor\");\r",
							"\r",
							"const main_Floor_ID = main_Floor_Thermostat ? main_Floor_Thermostat.identifier : null;\r",
							"\r",
							"const main_Floor_Program = main_Floor_Thermostat.program;\r",
							"\r",
							"const main_Floor_Schedule = JSON.stringify(main_Floor_Program.schedule);\r",
							"\r",
							"const main_Floor_Climates = main_Floor_Program.climates;\r",
							"\r",
							"pm.collectionVariables.set(\"upstairsID\", upstairs_ID);\r",
							"\r",
							"pm.collectionVariables.set(\"upstairsSchedule\", upstairs_Schedule);\r",
							"\r",
							"pm.collectionVariables.set(\"mainFloorID\", main_Floor_ID);\r",
							"\r",
							"pm.collectionVariables.set(\"mainFloorSchedule\", main_Floor_Schedule);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/thermostat?format=json&body={\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeProgram\":true}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"thermostat"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						},
						{
							"key": "body",
							"value": "{\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeProgram\":true}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSenorIDs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"const upstairs_Sensors = (response.thermostatList).find(thermostat => thermostat.name === \"Upstairs\").remoteSensors;\r",
							"\r",
							"const upstairs_Internal_Sensor = (upstairs_Sensors.find(remoteSensors => remoteSensors.name === \"Upstairs\") || {}).id + ':1';\r",
							"\r",
							"const Room_A_Sensor = (upstairs_Sensors.find(remoteSensors => remoteSensors.name === \"Room A\") || {}).id + ':1';\r",
							"\r",
							"pm.collectionVariables.set(\"upstairsInternalSensor\", upstairs_Internal_Sensor);\r",
							"\r",
							"pm.collectionVariables.set(\"roomASensor\", noras_Room_Sensor);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/thermostat?format=json&body={\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeSensors\":true}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"thermostat"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						},
						{
							"key": "body",
							"value": "{\"selection\":{\"selectionType\":\"registered\",\"selectionMatch\":\"\",\"includeSensors\":true}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NewSensorParticipationUpstairs",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"selection\": {\r\n    \"selectionType\":\"thermostats\",\r\n    \"selectionMatch\":\"522631540620\"\r\n  },\r\n  \"thermostat\": {\r\n    \"program\": {\r\n        \"schedule\": [\r\n          [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n        ],\r\n        [\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"home\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"smart1\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\",\r\n            \"sleep\"\r\n          ]\r\n        ],\r\n        \"climates\": [\r\n          {\r\n            \"name\": \"Away\",\r\n            \"climateRef\": \"away\",\r\n            \"isOccupied\": false,\r\n            \"isOptimized\": true,\r\n            \"coolFan\": \"auto\",\r\n            \"heatFan\": \"auto\",\r\n            \"vent\": \"off\",\r\n            \"ventilatorMinOnTime\": 20,\r\n            \"owner\": \"system\",\r\n            \"type\": \"program\",\r\n            \"colour\": 9021815,\r\n            \"coolTemp\": 780,\r\n            \"heatTemp\": 640,\r\n            \"sensors\": [\r\n                {\r\n                    \"id\": \"SENSORID\",\r\n                    \"name\": \"Upstairs\"\r\n                }\r\n            ]\r\n        },\r\n          {\r\n\t\t\t\"name\": \"Home\",\r\n\t\t\t\"climateRef\": \"home\",\r\n\t\t\t\"isOccupied\": true,\r\n\t\t\t\"isOptimized\": false,\r\n\t\t\t\"coolFan\": \"auto\",\r\n\t\t\t\"heatFan\": \"auto\",\r\n\t\t\t\"vent\": \"off\",\r\n\t\t\t\"ventilatorMinOnTime\": 20,\r\n\t\t\t\"owner\": \"system\",\r\n\t\t\t\"type\": \"program\",\r\n\t\t\t\"colour\": 13560055,\r\n\t\t\t\"coolTemp\": 750,\r\n\t\t\t\"heatTemp\": 680,\r\n\t\t\t\"sensors\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"SENSORID\",\r\n\t\t\t\t\t\"name\": \"Room A\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n          },\r\n          {\r\n            \"name\": \"coldmorning\",\r\n\t\t\t\"climateRef\": \"smart2\",\r\n\t\t\t\"isOccupied\": true,\r\n\t\t\t\"isOptimized\": true,\r\n\t\t\t\"coolFan\": \"auto\",\r\n\t\t\t\"heatFan\": \"auto\",\r\n\t\t\t\"vent\": \"off\",\r\n\t\t\t\"ventilatorMinOnTime\": 20,\r\n\t\t\t\"owner\": \"user\",\r\n\t\t\t\"type\": \"program\",\r\n\t\t\t\"colour\": 0,\r\n\t\t\t\"coolTemp\": 777,\r\n\t\t\t\"heatTemp\": 727,\r\n\t\t\t\"sensors\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"SENSORID\",\r\n\t\t\t\t\t\"name\": \"Room A\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n          },\r\n          {\r\n            \"name\": \"Naptime\",\r\n\t\t\t\"climateRef\": \"smart1\",\r\n\t\t\t\"isOccupied\": true,\r\n\t\t\t\"isOptimized\": true,\r\n\t\t\t\"coolFan\": \"auto\",\r\n\t\t\t\"heatFan\": \"auto\",\r\n\t\t\t\"vent\": \"off\",\r\n\t\t\t\"ventilatorMinOnTime\": 20,\r\n\t\t\t\"owner\": \"user\",\r\n\t\t\t\"type\": \"program\",\r\n\t\t\t\"colour\": 0,\r\n\t\t\t\"coolTemp\": 780,\r\n\t\t\t\"heatTemp\": 710,\r\n\t\t\t\"sensors\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"SENSORID\",\r\n\t\t\t\t\t\"name\": \"Room A\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n          },\r\n          {\r\n            \"name\": \"Sleep\",\r\n\t\t\t\"climateRef\": \"sleep\",\r\n\t\t\t\"isOccupied\": true,\r\n\t\t\t\"isOptimized\": false,\r\n\t\t\t\"coolFan\": \"auto\",\r\n\t\t\t\"heatFan\": \"auto\",\r\n\t\t\t\"vent\": \"off\",\r\n\t\t\t\"ventilatorMinOnTime\": 20,\r\n\t\t\t\"owner\": \"system\",\r\n\t\t\t\"type\": \"program\",\r\n\t\t\t\"colour\": 2179683,\r\n\t\t\t\"coolTemp\": 770,\r\n\t\t\t\"heatTemp\": 700,\r\n\t\t\t\"sensors\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": \"SENSORID\",\r\n\t\t\t\t\t\"name\": \"Room A\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n          }\r\n        ]\r\n      }\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/thermostat?format=json",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"thermostat"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SetHoldUpstairs",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"selection\": {\r\n    \"selectionType\":\"thermostats\",\r\n    \"selectionMatch\":\"{{upstairsID}}\"\r\n  },\r\n  \r\n  \"functions\": [\r\n    {\r\n      \"type\":\"setHold\",\r\n      \"params\":{\r\n        \"holdType\":\"nextTransition\",\r\n        \"heatHoldTemp\":650,\r\n        \"coolHoldTemp\":710\r\n      }\r\n    }\r\n  ]\r\n}  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/thermostat?format=json",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"thermostat"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiKey",
			"value": ""
		},
		{
			"key": "ecobeePin",
			"value": ""
		},
		{
			"key": "AutorizationCode",
			"value": ""
		},
		{
			"key": "Interval",
			"value": ""
		},
		{
			"key": "ExpiresIn",
			"value": ""
		},
		{
			"key": "Scope",
			"value": ""
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://api.ecobee.com"
		},
		{
			"key": "upstairsID",
			"value": ""
		},
		{
			"key": "upstairsSchedule",
			"value": ""
		},
		{
			"key": "upstairsInternalSensor",
			"value": ""
		},
		{
			"key": "norasRoomSensor",
			"value": ""
		},
		{
			"key": "mainFloorID",
			"value": ""
		},
		{
			"key": "mainFloorSchedule",
			"value": ""
		}
	]
}